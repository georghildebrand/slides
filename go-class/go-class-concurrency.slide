Go Class - Go Concurrency
Zalando TechAcademy
21:37 25 Feb 2016

Tags: Go, Concurrency, TechAcademy

Sandor SzÃ¼cs
CloudEngineer, Zalando
sandor.szuecs@zalando.de
https://sandor.szuecs.net/
@sszuecs
[[http://go-talks.appspot.com/github.com/szuecs/slides/go-class/go-class-concurrency.slide/][Slides available http://go-talks.appspot.com/github.com/szuecs/slides/go-class/go-class-concurrency.slide/]]
[[https://github.com/szuecs/slides/][Slides src available https://github.com/szuecs/slides/]]

* Requirements
- install https://golang.org/doc/install
- set ENV: GOROOT, GOPATH, GOBIN
- test: https://golang.org/doc/install#testing
- You should have basic knowledge of Go, similar to Go Class Kickstarter

* Concurrency features in Go
- no GIL --> good for CPU workload
- paradigm: share data by communication (CS theorie: CSP)
- use "channels" to orchestrate "goroutines" and share data
- nice tool to visualizepatterns:
.link https://divan.github.io/posts/go_concurrency_visualize/
.link https://golang.org/doc/effective_go.html#concurrency
- if you really need to tune, remove channels and replace for example with sync.Mutex
.link https://github.com/golang/go/wiki/MutexOrChannel

* Goroutine
- A goroutine is a lightweight thread of execution.
- Go VM manages the underlying thread pool for you
.play src/concurrency/hello_concurrency.go

* Mutex
.play src/concurrency/mutex.go /START/,/END/

* Mutex - nicer
.play src/concurrency/mutex_type_embedding.go /type/,/END$/

* Channel
.play src/concurrency/channels.go

####### slide magic
# [[http://reallink][link name]]
# .play -edit x.go
# .code x.go /^func main/,/^}/
# .play y.go
# .image image.jpg
# .iframe http://foo
# .link http://foo label
# .html file.html
###################
